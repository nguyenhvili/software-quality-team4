// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using StocksReportingLibrary.Infrastructure;

#nullable disable

namespace StocksReportingLibrary.Infrastructure.Persistance.Migrations
{
    [DbContext(typeof(StocksReportingDbContext))]
    [Migration("20250416093259_AddHoldings")]
    partial class AddHoldings
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.8");

            modelBuilder.Entity("StocksReportingLibrary.Domain.Email.Email", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("TEXT")
                        .HasColumnName("EmailId");

                    b.HasKey("Id");

                    b.ToTable("Emails", (string)null);
                });

            modelBuilder.Entity("StocksReportingLibrary.Domain.Report.Report", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("TEXT")
                        .HasColumnName("ReportId");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Reports", (string)null);
                });

            modelBuilder.Entity("StocksReportingLibrary.Domain.Email.Email", b =>
                {
                    b.OwnsOne("StocksReportingLibrary.Domain.Email.ValueObjects.EmailValue", "EmailValue", b1 =>
                        {
                            b1.Property<Guid>("EmailId")
                                .HasColumnType("TEXT");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasColumnType("TEXT")
                                .HasColumnName("Email");

                            b1.HasKey("EmailId");

                            b1.ToTable("Emails");

                            b1.WithOwner()
                                .HasForeignKey("EmailId");
                        });

                    b.Navigation("EmailValue")
                        .IsRequired();
                });

            modelBuilder.Entity("StocksReportingLibrary.Domain.Report.Report", b =>
                {
                    b.OwnsMany("StocksReportingLibrary.Domain.Report.Holding.Holding", "Holdings", b1 =>
                        {
                            b1.Property<Guid>("Id")
                                .HasColumnType("TEXT")
                                .HasColumnName("HoldingId");

                            b1.Property<Guid>("ReportId")
                                .HasColumnType("TEXT");

                            b1.HasKey("Id");

                            b1.HasIndex("ReportId");

                            b1.ToTable("Holdings", (string)null);

                            b1.WithOwner()
                                .HasForeignKey("ReportId");

                            b1.OwnsOne("StocksReportingLibrary.Domain.Report.Holding.ValueObjects.Company", "Company", b2 =>
                                {
                                    b2.Property<Guid>("HoldingId")
                                        .HasColumnType("TEXT");

                                    b2.Property<string>("Name")
                                        .IsRequired()
                                        .HasColumnType("TEXT")
                                        .HasColumnName("Company");

                                    b2.HasKey("HoldingId");

                                    b2.ToTable("Holdings");

                                    b2.WithOwner()
                                        .HasForeignKey("HoldingId");
                                });

                            b1.OwnsOne("StocksReportingLibrary.Domain.Report.Holding.ValueObjects.Shares", "Shares", b2 =>
                                {
                                    b2.Property<Guid>("HoldingId")
                                        .HasColumnType("TEXT");

                                    b2.Property<long>("Value")
                                        .HasColumnType("INTEGER")
                                        .HasColumnName("Shares");

                                    b2.HasKey("HoldingId");

                                    b2.ToTable("Holdings");

                                    b2.WithOwner()
                                        .HasForeignKey("HoldingId");
                                });

                            b1.OwnsOne("StocksReportingLibrary.Domain.Report.Holding.ValueObjects.SharesPercent", "SharesPercent", b2 =>
                                {
                                    b2.Property<Guid>("HoldingId")
                                        .HasColumnType("TEXT");

                                    b2.Property<decimal>("Value")
                                        .ValueGeneratedOnAdd()
                                        .HasColumnType("TEXT")
                                        .HasDefaultValue(0m)
                                        .HasColumnName("SharesPercent");

                                    b2.HasKey("HoldingId");

                                    b2.ToTable("Holdings");

                                    b2.WithOwner()
                                        .HasForeignKey("HoldingId");
                                });

                            b1.OwnsOne("StocksReportingLibrary.Domain.Report.Holding.ValueObjects.Ticker", "Ticker", b2 =>
                                {
                                    b2.Property<Guid>("HoldingId")
                                        .HasColumnType("TEXT");

                                    b2.Property<string>("Value")
                                        .IsRequired()
                                        .HasColumnType("TEXT")
                                        .HasColumnName("Ticker");

                                    b2.HasKey("HoldingId");

                                    b2.ToTable("Holdings");

                                    b2.WithOwner()
                                        .HasForeignKey("HoldingId");
                                });

                            b1.OwnsOne("StocksReportingLibrary.Domain.Report.Holding.ValueObjects.Weight", "Weight", b2 =>
                                {
                                    b2.Property<Guid>("HoldingId")
                                        .HasColumnType("TEXT");

                                    b2.Property<decimal>("Value")
                                        .HasColumnType("TEXT")
                                        .HasColumnName("Weight");

                                    b2.HasKey("HoldingId");

                                    b2.ToTable("Holdings");

                                    b2.WithOwner()
                                        .HasForeignKey("HoldingId");
                                });

                            b1.Navigation("Company")
                                .IsRequired();

                            b1.Navigation("Shares")
                                .IsRequired();

                            b1.Navigation("SharesPercent")
                                .IsRequired();

                            b1.Navigation("Ticker")
                                .IsRequired();

                            b1.Navigation("Weight")
                                .IsRequired();
                        });

                    b.OwnsOne("StocksReportingLibrary.Domain.Report.ValueObjects.ReportPathValue", "ReportPathValue", b1 =>
                        {
                            b1.Property<Guid>("ReportId")
                                .HasColumnType("TEXT");

                            b1.Property<string>("PathValue")
                                .IsRequired()
                                .HasMaxLength(500)
                                .HasColumnType("TEXT")
                                .HasColumnName("FilePath");

                            b1.HasKey("ReportId");

                            b1.ToTable("Reports");

                            b1.WithOwner()
                                .HasForeignKey("ReportId");
                        });

                    b.Navigation("Holdings");

                    b.Navigation("ReportPathValue")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
